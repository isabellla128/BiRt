openapi: 3.0.0
info:
  title: Flask API for Artist and Genre Recommendations
  description: API for retrieving and recommending artists and genres.
  version: 1.0.0
servers:
  - url: http://web-project.eu-north-1.elasticbeanstalk.com
paths:
  /:
    get:
      summary: Welcome endpoint
      responses:
        '200':
          description: Returns a welcome message
          content:
            text/plain:
              schema:
                type: string
  /artists:
    get:
      summary: Get a list of artists
      description: Retrieve a list of artists based on country, genre, and time period.
      parameters:
        - name: country
          in: query
          description: Filter artists by country.
          schema:
            type: string
        - name: genre
          in: query
          description: Filter artists by genre.
          schema:
            type: string
        - name: from-to
          in: query
          description: Filter artists by a year range (format 'YYYY-YYYY').
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of artists
          content:
            application/json:
              schema:
                type: object
                properties:
                  artists:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q392"
                        name:
                          type: string
                          example: "Bob Dylan"
                        photo:
                          type: string
                          format: uri
                          example: "http://commons.wikimedia.org/wiki/Special:FilePath/Joan%20Baez%20Bob%20Dylan%20crop.jpg"
                        genre:
                          type: string
                          example: "jazz"
                        country:
                          type: string
                          example: "United States"
        '400':
          description: Bad request due to incorrect parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "The 'from-to' years format is incorrect. Please use the format 'YYYY-YYYY'."
        '404':
          description: Not found error for country or genre
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Genre 'rock' not found in Wikidata."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  body:
                    type: object
                    properties:
                      error:
                        type: string
                        example: "Failed to fetch artists"

  /artists/{id}:
    get:
      summary: Get an artist by ID
      description: Retrieve details of an artist based on their unique ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the artist.
          schema:
            type: string
      responses:
        '200':
          description: Artist details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "wd:Q6096"
                  name:
                    type: string
                    example: "Snoop Dogg"
                  birth:
                    type: string
                    nullable: true
                    example: "20 octombrie 1971"
                  death:
                    type: string
                    nullable: true
                    example: null
                  photo:
                    type: string
                    format: uri
                    example: "http://commons.wikimedia.org/wiki/Special:FilePath/Snoop%20Dogg%202019%20by%20Glenn%20Francis.jpg"
                  country:
                    type: string
                    example: "United States"
                  occupations:
                    type: array
                    items:
                      type: string
                    example: ["rapper", "actor", "producer"]
                  genres:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q9794"
                        label:
                          type: string
                          example: "reggae"
                  awards:
                    type: array
                    items:
                      type: string
                    example: ["WWE Hall of Fame", "MTV Video Music Award for Best Rap Video"]
                  nominations:
                    type: array
                    items:
                      type: string
                    example: ["MTV Europe Music Award for Best European Act"]
                  instruments:
                    type: array
                    items:
                      type: string
                    example: ["voice"]
            application/rdf+xml:
              schema:
                type: string
                example: "<rdf:RDF>...</rdf:RDF>"
        '400':
          description: Bad request - Artist ID is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Artist ID is required."
        '404':
          description: Not found - The artist does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Artist not found."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  body:
                    type: object
                    properties:
                      error:
                        type: string
                        example: "Failed to fetch artist"
                
  /artists/{id}/recommend:
    get:
      summary: Recommend artists based on a given artist ID
      description: Retrieve a list of recommended artists similar to the given artist.
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the artist.
          schema:
            type: string
      responses:
        '200':
          description: Recommended artists retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  artists:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q392"
                        name:
                          type: string
                          example: "Bob Dylan"
                        photo:
                          type: string
                          format: uri
                          example: "http://commons.wikimedia.org/wiki/Special:FilePath/Joan%20Baez%20Bob%20Dylan%20crop.jpg"
                        genre:
                          type: string
                          example: "jazz"
                        country:
                          type: string
                          example: "United States"
        '400':
          description: Bad request - Artist ID is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Artist ID is required."
        '404':
          description: Not found - No recommendations found / Genres not found / Birth year not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No recommendations found."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  body:
                    type: object
                    properties:
                      error:
                        type: string
                        example: "Failed to fetch artist recommandations"

  /genres:
    get:
      summary: Get a list of genres
      description: Retrieve a list of music genres, optionally filtered by country.
      parameters:
        - name: country
          in: query
          description: Filter genres by country.
          schema:
            type: string
      responses:
        '200':
          description: A JSON array of genres
          content:
            application/json:
              schema:
                type: object
                properties:
                  genres:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q475221"
                        label:
                          type: string
                          example: "deathcore"
                        image:
                          type: string
                          format: uri
                          example: "http://commons.wikimedia.org/wiki/Special:FilePath/Suicide%20Silence%20%40%20Arena%20Joondalup%20%2812%2012%202010%29%20%285273245862%29.jpg"
                        country:
                          type: string
                          example: "Canada"
        '404':
          description: No genres found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No genres found."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "An unexpected error occurred. Please try again later."

  /genres/{id}:
    get:
      summary: Get a genre by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the genre to fetch.
          schema:
            type: string
      responses:
        '200':
          description: Genre details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "wd:Q183862"
                  label:
                    type: string
                    example: "metalcore"
                  image:
                    type: string
                    example: "http://commons.wikimedia.org/wiki/Special:FilePath/Killswitch%20Engage%20-%20Rock%20am%20Ring%202016%20-%20Mendig%20-%20027381510148%20-%20Leonhard%20Kreissig%20-%20Canon%20EOS%205D%20Mark%20II.jpg"
                  wikipediaLink:
                    type: string
                    example: "https://en.wikipedia.org/wiki/Metalcore"
                  description:
                    type: string
                    example: "fusion genre of heavy metal and hardcore punk"
                  subgenres:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q2084353"
                        label:
                          type: string
                          example: "electronicore"
                  countries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q30"
                        label:
                          type: string
                          example: "United States"
                  parentCategories:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q188451"
                        label:
                          type: string
                          example: "music genre"
                  superclasses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q10922"
                        label:
                          type: string
                          example: "hardcore punk"
        '400':
          description: Genre ID is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Genre ID is required."
        '404':
          description: Genre not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Genre not found."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "An unexpected error occurred. Please try again later."
                
  /genres/{id}/recommendGenres:
    get:
      summary: Recommend genres based on a given genre ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the genre to fetch recommendations for.
          schema:
            type: string
      responses:
        '200':
          description: Recommended genres
          content:
            application/json:
              schema:
                type: object
                properties:
                  genres:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q475221"
                        label:
                          type: string
                          example: "deathcore"
                        image:
                          type: string
                          example: "http://commons.wikimedia.org/wiki/Special:FilePath/Suicide%20Silence%20%40%20Arena%20Joondalup%20%2812%2012%202010%29%20%285273245862%29.jpg"
                        country:
                          type: string
                          example: "Canada"
        '400':
          description: Genre ID is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Genre ID is required."
        '404':
          description: No recommended genres found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "No recommended genres found."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "An unexpected error occurred."
                
  /genres/{id}/recommendArtists:
    get:
      summary: Recommend artists based on a given genre ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the genre to fetch artist recommendations for.
          schema:
            type: string
      responses:
        '200':
          description: Recommended artists
          content:
            application/json:
              schema:
                type: object
                properties:
                  artists:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "wd:Q392"
                        name:
                          type: string
                          example: "Bob Dylan"
                        photo:
                          type: string
                          example: "http://commons.wikimedia.org/wiki/Special:FilePath/Joan%20Baez%20Bob%20Dylan%20crop.jpg"
                        genre:
                          type: string
                          example: "jazz"
                        country:
                          type: string
                          example: "United States"
        '400':
          description: Genre ID is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Genre ID is required."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "An unexpected error occurred."
  /artists/summarize:
    get:
      summary: Get summarized artist information
      parameters:
        - name: country
          in: query
          schema:
            type: string
          description: The country to filter artists by
        - name: genre
          in: query
          schema:
            type: string
          description: The genre to filter artists by
        - name: from-to
          in: query
          schema:
            type: string
          description: A range of years in the format 'YYYY-YYYY'
        - name: limit-countries
          in: query
          schema:
            type: string
          description: A limit to the number of countries to return
        - name: limit-genres
          in: query
          schema:
            type: string
          description: A limit to the number of genres to return
      responses:
        '200':
          description: Summary of artists
          content:
            application/json:
              schema:
                type: object
                properties:
                  byCountry:
                    type: array
                    items:
                      type: object
                      properties:
                        country:
                          type: string
                          example: "romania"
                        count:
                          type: integer
                          example: 145
                  byGenre:
                    type: array
                    items:
                      type: object
                      properties:
                        genre:
                          type: string
                          example: "pop music"
                        count:
                          type: integer
                          example: 100
                  byDecade:
                    type: array
                    items:
                      type: object
                      properties:
                        decade:
                          type: string
                          example: "1980-1990"
                        count:
                          type: integer
                          example: 532
        '400':
          description: Invalid parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Invalid from-to parameter."
        '404':
          description: Genre or country not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: " Genre pop music not found."
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "An unexpected error occurred."
